from app.diagnostic.models import *
from app.users.models import User, Role
from datetime import datetime


def dict_copy_union(dict1, *kargs):
    dict3 = dict1.copy()
    for dict_item in kargs:
        dict3.update(dict_item)
    return dict3

id_dict = {'readonly': True}
required_dict = {'required': True}
type_string_dict = {'type': 'string'}
type_datetime_dict = {'type': 'datetime'}
type_boolean_dict = {'type': 'boolean', 'coerce': bool}
type_float_coerce_dict = {'type': 'float', 'coerce': float}
type_integer_dict = {'type': 'integer'}
type_datetime_required_dict = dict_copy_union(type_datetime_dict, required_dict)
type_integer_coerce_dict = dict_copy_union(type_integer_dict, {'coerce': int})
type_integer_coerce_6_digits_dict = dict_copy_union(type_integer_coerce_dict, {'max': 999999}),
type_integer_coerce_8_digits_dict = dict_copy_union(type_integer_coerce_dict, {'max': 99999999}),
type_integer_coerce_required_dict = dict_copy_union(type_integer_coerce_dict, required_dict)
type_string_maxlength_5_dict = dict_copy_union(type_string_dict, {'maxlength': 5})
type_string_maxlength_20_dict = dict_copy_union(type_string_dict, {'maxlength': 20})
type_string_maxlength_50_dict = dict_copy_union(type_string_dict, {'maxlength': 50})
type_string_maxlength_100_dict = dict_copy_union(type_string_dict, {'maxlength': 100})
type_string_maxlength_255_dict = dict_copy_union(type_string_dict, {'maxlength': 255})
type_string_maxlength_256_dict = dict_copy_union(type_string_dict, {'maxlength': 256})
type_string_maxlength_1024_dict = dict_copy_union(type_string_dict, {'maxlength': 1024})
type_string_maxlength_required_50_dict = dict_copy_union(type_string_maxlength_50_dict, required_dict)
type_string_frequency_dict = dict_copy_union(type_string_dict, {'allowed': ['25', '50', '60', 'DC']})

fluid_type_schema = sampling_point_schema = contract_status_schema = upstream_schema = interrupting_medium_schema = \
    gas_level_schema = downstream_schema = breaker_mechanism_schema = insulation_schema = test_reason_schema = \
    location_schema = {'id': id_dict,
                       'name': type_string_maxlength_50_dict,
                       }
gasket_condition_schema = gas_relay_schema = fluid_level_schema = pressure_unit_schema = valve_condition_schema = \
    pump_condition_schema = overall_condition_schema = paint_types_schema = tap_counter_status_schema = \
    tap_filter_condition_schema = fan_condition_schema = connection_condition_schema = foundation_condition_schema = \
    heating_condition_schema = {'id': id_dict,
                                'name': dict_copy_union(type_string_dict, {'maxlength': 25}),
                                }
equipment_schema = {
    'id': id_dict,
    'name': type_string_maxlength_required_50_dict,
    'equipment_number': type_string_maxlength_required_50_dict,
    'equipment_type_id': type_integer_coerce_required_dict,
    'location_id': type_integer_coerce_required_dict,
    'visual_inspection_by_id': type_integer_coerce_required_dict,
    'assigned_to_id': type_integer_coerce_required_dict,
    'norm_id': type_integer_coerce_required_dict,
    'manufacturer_id': type_integer_coerce_dict,
    'serial': type_string_maxlength_50_dict,
    'manufactured': dict_copy_union(type_integer_coerce_dict, required_dict, {'min': 1900, 'max': datetime.now().year}),
    'frequency': type_string_frequency_dict,
    'description': type_string_dict,
    'modifier':  type_boolean_dict,
    'comments':  type_string_dict,
    'visual_date':   type_string_dict,
    'visual_inspection_comments':    type_string_dict,
    'nbr_of_tap_change_ltc': type_string_dict,
    'upstream1': type_string_maxlength_100_dict,
    'upstream2': type_string_maxlength_100_dict,
    'upstream3': type_string_maxlength_100_dict,
    'upstream4': type_string_maxlength_100_dict,
    'upstream5': type_string_maxlength_100_dict,
    'downstream1':   type_string_maxlength_100_dict,
    'downstream2':   type_string_maxlength_100_dict,
    'downstream3':   type_string_maxlength_100_dict,
    'downstream4':   type_string_maxlength_100_dict,
    'downstream5':   type_string_maxlength_100_dict,
    'tie_location':  type_boolean_dict,
    'tie_maintenance_state': type_integer_coerce_dict,
    'tie_status':    type_integer_coerce_dict,
    'phys_position': type_integer_coerce_dict,
    'tension4':  type_float_coerce_dict,
    'validated': type_boolean_dict,
    'invalidation':  type_boolean_dict,
    'prev_serial_number':    type_string_maxlength_50_dict,
    'prev_equipment_number': type_string_maxlength_50_dict,
    'sibling':   type_integer_coerce_dict,
    }
equipment_type_schema = {'id': id_dict,
                         'name': type_string_maxlength_50_dict,
                         'code': type_string_maxlength_50_dict,
                         'table_name': type_string_maxlength_50_dict,
                         }
campaign_schema = {'id': id_dict,
                   'date': type_datetime_required_dict,
                   'created_by_id': type_integer_coerce_required_dict,
                   'equipment_id': type_integer_coerce_required_dict,
                   'performed_by_id': type_integer_coerce_required_dict,
                   'lab_id': type_integer_coerce_required_dict,
                   'material_id': type_integer_coerce_dict,
                   'analysis_number': dict_copy_union(type_string_dict, {'maxlength': 15}),
                   'percent_ratio': type_boolean_dict,
                   'fluid_type_id': type_integer_coerce_dict,
                   'charge': type_float_coerce_dict,
                   'date_prelevement': type_datetime_dict,
                   'remark': type_string_dict,
                   'modifier': type_boolean_dict,
                   'transmission': type_boolean_dict,
                   'repair_date': type_datetime_dict,
                   'repair_description': type_string_dict,
                   'if_rem': type_string_maxlength_5_dict,
                   'if_ok': type_string_maxlength_5_dict,
                   'recommandation_id': type_integer_coerce_dict,
                   'recommendationNotes': type_string_dict,
                   'recommended_by_id': type_integer_coerce_dict,
                   'date_application': type_datetime_dict,
                   'comments': type_string_dict,
                   'mws': type_float_coerce_dict,
                   'temperature': type_float_coerce_dict,
                   'sampling_card_print': type_boolean_dict,
                   'contract_id': type_integer_coerce_dict,
                   'containers': type_float_coerce_dict,
                   'sampling_card_gathered': type_integer_coerce_dict,
                   'gathered_test_type': type_string_maxlength_50_dict,
                   'lab_contract_id': type_integer_coerce_dict,
                   'seringe_num': type_string_maxlength_50_dict,
                   'data_valid': type_integer_coerce_dict,
                   'status1': type_integer_coerce_dict,
                   'status2': type_integer_coerce_dict,
                   'error_state': type_integer_coerce_dict,
                   'error_code': type_integer_coerce_dict,
                   'ambient_air_temperature': type_float_coerce_dict,
                   'bushing': type_boolean_dict,
                   'winding': type_boolean_dict,
                   'insulation_pf': type_boolean_dict,
                   'insulation': type_boolean_dict,
                   'visual_inspection': type_boolean_dict,
                   'resistance': type_boolean_dict,
                   'degree': type_boolean_dict,
                   'turns': type_boolean_dict,
                   'gas': type_boolean_dict,
                   'water': type_boolean_dict,
                   'furans': type_boolean_dict,
                   'inhibitor': type_boolean_dict,
                   'pcb': type_boolean_dict,
                   'qty': type_integer_coerce_dict,
                   'sampling': type_integer_coerce_dict,
                   'dielec': type_boolean_dict,
                   'acidity': type_boolean_dict,
                   'density': type_boolean_dict,
                   'pcb_jar': type_boolean_dict,
                   'inhibitor_jar': type_boolean_dict,
                   'point': type_boolean_dict,
                   'dielec_2': type_boolean_dict,
                   'color': type_boolean_dict,
                   'pf': type_boolean_dict,
                   'particles': type_boolean_dict,
                   'metals': type_boolean_dict,
                   'viscosity': type_boolean_dict,
                   'dielec_d': type_boolean_dict,
                   'ift': type_boolean_dict,
                   'pf_100': type_boolean_dict,
                   'furans_f': type_boolean_dict,
                   'water_w': type_boolean_dict,
                   'corr': type_boolean_dict,
                   'dielec_i': type_boolean_dict,
                   'visual': type_boolean_dict,
                   'qty_jar': type_integer_coerce_dict,
                   'sampling_jar': type_integer_coerce_dict,
                   'pcb_vial': type_boolean_dict,
                   'antioxidant': type_boolean_dict,
                   'qty_vial': type_integer_coerce_dict,
                   'sampling_vial': type_integer_coerce_dict,
                   }
contract_schema = {'id': id_dict,
                   'name': type_string_maxlength_50_dict,
                   'code': type_string_maxlength_50_dict,
                   'contract_status_id': type_integer_coerce_required_dict,
                   }
norm_schema = {'id': id_dict,
               'name': type_string_maxlength_50_dict,
               'table_name': type_string_maxlength_50_dict,
               }
manufacturer_schema = {'id': id_dict,
                       'name': type_string_maxlength_required_50_dict,
                       'markings': type_string_dict,
                       'location': type_string_maxlength_256_dict,
                       'description': type_string_dict,
                       }
user_schema = {'id': id_dict,
               'name': type_string_maxlength_50_dict,
               'alias': type_string_maxlength_required_50_dict,
               'email': dict_copy_union(type_string_dict, required_dict, {'maxlength': 120}),
               'password': type_string_maxlength_required_50_dict,
               'status': type_integer_coerce_dict,
               'address': type_string_maxlength_255_dict,
               'mobile': type_string_maxlength_50_dict,
               'website': type_string_maxlength_255_dict,
               'country': type_string_maxlength_255_dict,
               'photo': type_string_maxlength_255_dict,
               'description': type_string_dict,
               'active': type_boolean_dict,
               'confirmed': type_boolean_dict,
               'confirmed_at': type_datetime_dict,
               'created': type_datetime_dict,
               'updated': type_datetime_dict,
               }
electrical_profile_schema = {'id': id_dict,
                             'selection': type_string_maxlength_256_dict,
                             'description': type_string_maxlength_1024_dict,
                             'bushing': type_boolean_dict,
                             'winding': type_boolean_dict,
                             'insulation_pf': type_boolean_dict,
                             'insulation': type_boolean_dict,
                             'visual': type_boolean_dict,
                             'resistance': type_boolean_dict,
                             'degree': type_boolean_dict,
                             'turns': type_boolean_dict,
                             }
fluid_profile_schema = {'id': id_dict,
                        'selection': type_string_maxlength_256_dict,
                        'description': type_string_maxlength_1024_dict,
                        'gas': type_boolean_dict,
                        'water': type_boolean_dict,
                        'furans': type_boolean_dict,
                        'inhibitor': type_boolean_dict,
                        'pcb': type_boolean_dict,
                        'qty': type_integer_coerce_dict,
                        'sampling': type_integer_coerce_dict,
                        'dielec': type_boolean_dict,
                        'acidity': type_boolean_dict,
                        'density': type_boolean_dict,
                        'pcb_jar': type_boolean_dict,
                        'inhibitor_jar': type_boolean_dict,
                        'point': type_boolean_dict,
                        'dielec_2': type_boolean_dict,
                        'color': type_boolean_dict,
                        'pf': type_boolean_dict,
                        'particles': type_boolean_dict,
                        'metals': type_boolean_dict,
                        'viscosity': type_boolean_dict,
                        'dielec_d': type_boolean_dict,
                        'ift': type_boolean_dict,
                        'pf_100': type_boolean_dict,
                        'furans_f': type_boolean_dict,
                        'water_w': type_boolean_dict,
                        'corr': type_boolean_dict,
                        'dielec_i': type_boolean_dict,
                        'visual': type_boolean_dict,
                        'qty_jar': type_integer_coerce_dict,
                        'sampling_jar': type_integer_coerce_dict,
                        'pcb_vial': type_boolean_dict,
                        'antioxidant': type_boolean_dict,
                        'qty_vial': type_integer_coerce_dict,
                        'sampling_vial': type_integer_coerce_dict,
                        }
test_result_schema = {'id': id_dict,
                      'campaign_id': type_integer_coerce_dict,
                      'reason_id': type_integer_coerce_dict,
                      'date_analyse': type_datetime_dict,
                      'test_type_id': type_integer_coerce_dict,
                      'sampling_point_id': type_integer_coerce_dict,
                      'test_status_id': type_integer_coerce_dict,
                      }
role_schema = {'id': id_dict,
               'name': dict_copy_union(type_string_dict, {'maxlength', 80}),
               'description': type_string_maxlength_255_dict,
               }
lab_schema = {'id': id_dict,
              'code': type_integer_coerce_dict,
              'name': type_string_maxlength_256_dict,
              'analyser': type_string_maxlength_256_dict,
              }
material_schema = {'id': id_dict,
                   'name': type_string_maxlength_50_dict,
                   'code': type_string_maxlength_50_dict,
                   }
gas_sensor_schema = {'id': id_dict,
                     'name': type_string_maxlength_50_dict,
                     'serial': type_string_maxlength_50_dict,
                     'model': type_string_maxlength_50_dict,
                     'h2': type_float_coerce_dict,
                     'ch4': type_float_coerce_dict,
                     'c2h2': type_float_coerce_dict,
                     'c2h4': type_float_coerce_dict,
                     'c2h6': type_float_coerce_dict,
                     'co': type_float_coerce_dict,
                     'co2': type_float_coerce_dict,
                     'o2': type_float_coerce_dict,
                     'n2': type_float_coerce_dict,
                     'percent_error': type_float_coerce_dict,
                     'ppm_error': type_integer_coerce_dict,
                     }
transformer_schema = {'id': id_dict,
                      'name': type_string_maxlength_50_dict,
                      'serial': type_string_maxlength_required_50_dict,
                      'fluid_type_id': type_integer_coerce_required_dict,
                      'gassensor_id': type_integer_coerce_required_dict,
                      'fluid_volume': type_float_coerce_dict,
                      'sealed': type_boolean_dict,
                      'welded_cover': type_boolean_dict,
                      'windings': type_integer_coerce_dict,
                      'cooling_rating': type_integer_coerce_dict,
                      'autotransformer': type_boolean_dict,
                      'threephase': type_boolean_dict,
                      'fluid_level_id': type_integer_coerce_dict,
                      'phase_number': dict_copy_union(type_integer_dict, {'allowed': ['1', '3', '6']}),
                      'frequency': type_string_frequency_dict,
                      'primary_tension': type_float_coerce_dict,
                      'secondary_tension': type_float_coerce_dict,
                      'tertiary_tension': type_float_coerce_dict,
                      'based_transformerp_ower': type_float_coerce_dict,
                      'first_cooling_stage_power': type_float_coerce_dict,
                      'second_cooling_stage_power': type_float_coerce_dict,
                      'primary_winding_connection': type_integer_coerce_dict,
                      'secondary_winding_connection': type_integer_coerce_dict,
                      'tertiary_winding_connection': type_integer_coerce_dict,
                      'windind_metal': type_integer_coerce_dict,
                      'bil1': type_float_coerce_dict,
                      'bil2': type_float_coerce_dict,
                      'bil3': type_float_coerce_dict,
                      'static_shield1': type_boolean_dict,
                      'static_shield2': type_boolean_dict,
                      'static_shield3': type_boolean_dict,
                      'bushing_neutral1': type_float_coerce_dict,
                      'bushing_neutral2': type_float_coerce_dict,
                      'bushing_neutral3': type_float_coerce_dict,
                      'bushing_neutral4': type_float_coerce_dict,
                      'ltc1': type_float_coerce_dict,
                      'ltc2': type_float_coerce_dict,
                      'ltc3': type_float_coerce_dict,
                      'temperature_rise': type_integer_coerce_dict,
                      'impedance1': type_float_coerce_dict,
                      'imp_base1': type_float_coerce_dict,
                      'impedance2': type_float_coerce_dict,
                      'imp_base2': type_float_coerce_dict,
                      'mvaforced11': type_float_coerce_dict,
                      'mvaforced12': type_float_coerce_dict,
                      'mvaforced13': type_float_coerce_dict,
                      'mvaforced14': type_float_coerce_dict,
                      'mvaforced21': type_float_coerce_dict,
                      'mvaforced22': type_float_coerce_dict,
                      'mvaforced23': type_float_coerce_dict,
                      'mvaforced24': type_float_coerce_dict,
                      'impedance3': type_float_coerce_dict,
                      'impbasedmva3': type_float_coerce_dict,
                      'formula_ratio2': type_integer_coerce_dict,
                      'formula_ratio': type_integer_coerce_dict,
                      'ratio_tag1': type_string_maxlength_20_dict,
                      'ratio_tag2': type_string_maxlength_20_dict,
                      'ratio_tag3': type_string_maxlength_20_dict,
                      'ratio_tag4': type_string_maxlength_20_dict,
                      'ratio_tag5': type_string_maxlength_20_dict,
                      'ratio_tag6': type_string_maxlength_20_dict,
                      'bushing_serial1_id': type_integer_coerce_dict,
                      'bushing_serial2_id': type_integer_coerce_dict,
                      'bushing_serial3_id': type_integer_coerce_dict,
                      'bushing_serial4_id': type_integer_coerce_dict,
                      'bushing_serial5_id': type_integer_coerce_dict,
                      'bushing_serial6_id': type_integer_coerce_dict,
                      'bushing_serial7_id': type_integer_coerce_dict,
                      'bushing_serial8_id': type_integer_coerce_dict,
                      'bushing_serial9_id': type_integer_coerce_dict,
                      'bushing_serial10_id': type_integer_coerce_dict,
                      'bushing_serial11_id': type_integer_coerce_dict,
                      'bushing_serial12_id': type_integer_coerce_dict,
                      'mvaactual': type_float_coerce_dict,
                      'mvaractual': type_float_coerce_dict,
                      'mwreserve': type_float_coerce_dict,
                      'mvarreserve': type_float_coerce_dict,
                      'mwultime': type_float_coerce_dict,
                      'mvarultime': type_float_coerce_dict,
                      'mva4': type_float_coerce_dict,
                      'quaternary_winding_connection': type_float_coerce_dict,
                      'bil4': type_float_coerce_dict,
                      'static_shield4': type_float_coerce_dict,
                      'ratio_tag7': type_float_coerce_dict,
                      'ratiot_ag8': type_float_coerce_dict,
                      'formula_ratio3': type_float_coerce_dict,
                      }
breaker_schema = {'id': id_dict,
                  'name': type_string_maxlength_50_dict,
                  'serial': type_string_maxlength_required_50_dict,
                  'current_rating': type_integer_coerce_6_digits_dict,
                  'open': type_boolean_dict,
                  'fluid_type_id': type_integer_coerce_dict,
                  'fluid_level_id': type_integer_coerce_dict,
                  'interrupting_medium_id': type_integer_coerce_dict,
                  'breaker_mechanism_id': type_integer_coerce_dict,

                  }
tap_changer_schema = {'id': id_dict,
                      'name': type_string_maxlength_50_dict,
                      'serial': type_string_maxlength_required_50_dict,
                      'model': type_string_maxlength_50_dict,
                      'filter': dict_copy_union(type_string_dict, {'maxlength': 30}),
                      'counter': type_integer_coerce_dict,
                      'number_of_taps': type_integer_coerce_dict,
                      'fluid_type_id': type_integer_coerce_dict,
                      'fluid_level_id': type_integer_coerce_dict,
                      'interrupting_medium_id': type_integer_coerce_dict,
                      }
bushing_schema = {'id': id_dict,
                  'name': type_string_maxlength_50_dict,
                  'serial': type_string_maxlength_required_50_dict,
                  'model': type_string_maxlength_50_dict,
                  'type': dict_copy_union(type_string_dict, {'allowed': ['phase', 'Neutral']}),
                  'kv': type_float_coerce_dict,
                  'sealed': type_boolean_dict,
                  'current': type_integer_coerce_dict,
                  'fluid_volume': type_float_coerce_dict,
                  'bil': type_integer_coerce_8_digits_dict,
                  'c1': type_float_coerce_dict,
                  'c1pf': type_float_coerce_dict,
                  'c2': type_float_coerce_dict,
                  'c2pf': type_float_coerce_dict,
                  'fluid_type_id': type_integer_coerce_dict,
                  }
resistance_schema = {'id': id_dict,
                     'name': type_string_maxlength_50_dict,
                     'serial': type_string_maxlength_required_50_dict,
                     'neutral_resistance': type_float_coerce_dict,
                     'neutral_resistance1': type_float_coerce_dict,
                     'neutral_resistance0': type_boolean_dict,
                     'neutral_resistance2': type_float_coerce_dict,
                     'neutral_resistance3': type_float_coerce_dict,
                     'neutral_resistance_open1': type_boolean_dict,
                     'neutral_resistance_open2': type_boolean_dict,
                     'neutral_resistance_open3': type_float_coerce_dict,
                     'kv': type_float_coerce_dict,
                     'bil': type_integer_coerce_8_digits_dict,
                     'open': type_boolean_dict,
                     }
air_breaker_schema = {'id': id_dict,
                      'name': type_string_maxlength_50_dict,
                      'serial': type_string_maxlength_required_50_dict,
                      'current_rating': type_integer_coerce_6_digits_dict,
                      }
capacitor_schema = {'id': id_dict,
                    'name': type_string_maxlength_50_dict,
                    'serial': type_string_maxlength_required_50_dict,
                    'kv': type_float_coerce_dict,
                    'kvar': type_float_coerce_dict,
                    'bil': type_integer_coerce_8_digits_dict,
                    }
powersource_schema = {'id': id_dict,
                      'name': type_string_maxlength_50_dict,
                      'serial': type_string_maxlength_required_50_dict,
                      'kv': type_float_coerce_dict,
                      'threephase': type_boolean_dict,
                      }
switchgear_schema = {'id': id_dict,
                     'name': type_string_maxlength_50_dict,
                     'serial': type_string_maxlength_required_50_dict,
                     'current_rating': type_integer_coerce_6_digits_dict,
                     'insulation_id': type_integer_coerce_dict,
                     }
induction_machine_schema = {'id': id_dict,
                            'name': type_string_maxlength_50_dict,
                            'serial': type_string_maxlength_required_50_dict,
                            'current_rating': type_integer_coerce_6_digits_dict,
                            'hp': type_string_maxlength_50_dict,
                            'kva': type_string_maxlength_50_dict,
                            'pf': type_string_maxlength_50_dict,
                            }
synchronous_machine_schema = {'id': id_dict,
                              'name': type_string_maxlength_50_dict,
                              'serial': type_string_maxlength_required_50_dict,
                              'current_rating': type_integer_coerce_6_digits_dict,
                              'hp': type_string_maxlength_50_dict,
                              'kw': type_string_maxlength_50_dict,
                              }
rectifier_schema = {'id': id_dict,
                    'name': type_string_maxlength_50_dict,
                    'serial': type_string_maxlength_required_50_dict,
                    'fluid_volume': type_float_coerce_dict,
                    'sealed': type_boolean_dict,
                    'windings': type_integer_coerce_dict,
                    'welded_cover': type_boolean_dict,
                    'cooling_rating': type_integer_coerce_dict,
                    'fluid_type_id': type_integer_coerce_dict,
                    'fluid_level_id': type_integer_coerce_dict,
                    'gas_sensor_id': type_integer_coerce_dict,
                    }
inductance_schema = {'id': id_dict,
                     'name': type_string_maxlength_50_dict,
                     'serial': type_string_maxlength_required_50_dict,
                     'fluid_volume': type_float_coerce_dict,
                     'sealed': type_boolean_dict,
                     'welded_cover': type_boolean_dict,
                     'cooling_rating': type_integer_coerce_dict,
                     'fluid_type_id': type_integer_coerce_dict,
                     'fluid_level_id': type_integer_coerce_dict,
                     'gas_sensor_id': type_integer_coerce_dict,
                     }
tank_schema = {'id': id_dict,
               'name': type_string_maxlength_50_dict,
               'serial': type_string_maxlength_required_50_dict,
               'welded_cover': type_boolean_dict,
               'fluid_type_id': type_integer_coerce_dict,
               'fluid_level_id': type_integer_coerce_dict,
               }
switch_schema = {'id': id_dict,
                 'name': type_string_maxlength_50_dict,
                 'serial': type_string_maxlength_required_50_dict,
                 'current_rating': type_integer_coerce_6_digits_dict,
                 'threephase': type_boolean_dict,
                 'interrupting_medium_id': type_integer_coerce_dict
                 }
cable_schema = {'id': id_dict,
                'name': type_string_maxlength_50_dict,
                'serial': type_string_maxlength_required_50_dict,
                'model': type_string_maxlength_50_dict,
                'sealed': type_boolean_dict,
                'threephase': type_boolean_dict,
                'insulation_id': type_integer_coerce_dict,
                }
recommendation_schema = {'id': id_dict,
                         'name': type_string_maxlength_50_dict,
                         'code': type_string_maxlength_50_dict,
                         'description': type_string_dict,
                         'test_type_id': type_integer_coerce_dict,
                         }
syringe_schema = {'id': id_dict,
                  'serial': type_string_maxlength_required_50_dict,
                  'lab_id': type_integer_coerce_dict,
                  }
test_status_schema = {'id': id_dict,
                      'code': type_string_maxlength_50_dict,
                      'name': type_string_maxlength_50_dict,
                      }
schedule_schema = {
    'equipment_id': type_integer_coerce_required_dict,
    'start_date': type_datetime_required_dict,
    'period_years': type_integer_coerce_dict,
    'period_months': type_integer_coerce_dict,
    'period_days': type_integer_coerce_dict,
    'assigned_to_id': type_integer_coerce_required_dict,
    'recurring': type_boolean_dict,
    'notify_before_in_days': type_integer_coerce_dict,
    'description': type_string_dict,
    'tests_to_perform': type_integer_coerce_dict,
    'order': type_integer_coerce_required_dict,
    }


# TODO


test_type_schema = {'id': id_dict,
                    }
test_type_result_table_schema = {'id': id_dict,
                                 }
bushing_test_schema = {'id': id_dict,
                       }
winding_test_schema = {'id': id_dict,
                       }
visual_inspection_test_schema = {'id': id_dict,
                                 }
insulation_resistance_test_schema = {'id': id_dict,
                                     }
polymerisation_degree_test_schema = {'id': id_dict,
                                     }
transformer_turn_ratio_test_schema = {'id': id_dict,
                                      }
winding_resistance_test_schema = {'id': id_dict,
                                  }
dissolved_gas_test_schema = {'id': id_dict,
                             }
water_test_schema = {'id': id_dict,
                     }
furan_test_schema = {'id': id_dict,
                     }
inhibitor_test_schema = {'id': id_dict,
                         }
inhibitor_type_schema = {'id': id_dict,
                         }
pcb_test_schema = {'id': id_dict,
                   }
particle_test_schema = {'id': id_dict,
                        }
metals_in_oil_test_schema = {'id': id_dict,
                             }
fluid_test_schema = {'id': id_dict,
                     }
norm_physic_schema = {'id': id_dict,
                      }
norm_gas_schema = {'id': id_dict,
                   }
particles_schema = {'id': id_dict,
                    }
norm_isolation_schema = {'id': id_dict,
                         }
norm_furan_schema = {'id': id_dict,
                     }
model_dict = {
    'equipment': {'model': Equipment, 'schema': equipment_schema},
    'equipment_type': {'model': EquipmentType, 'schema': equipment_type_schema},
    'campaign': {'model': Campaign, 'schema': campaign_schema},
    'contract': {'model': Contract, 'schema': contract_schema},
    'norm': {'model': Norm, 'schema': norm_schema},
    'location': {'model': Location, 'schema': location_schema},
    'manufacturer': {'model': Manufacturer, 'schema': manufacturer_schema},
    'user': {'model': User, 'schema': user_schema},
    'assigned_to': {'model': User, 'schema': user_schema},
    'visual_inspection_by': {'model': User, 'schema': user_schema},
    'electrical_profile': {'model': ElectricalProfile, 'schema': electrical_profile_schema},
    'fluid_profile': {'model': FluidProfile, 'schema': fluid_profile_schema},
    'test_result': {'model': TestResult, 'schema': test_result_schema},
    'role': {'model': Role, 'schema': role_schema},
    'lab': {'model': Lab, 'schema': lab_schema},
    'contract_status': {'model': ContractStatus, 'schema': contract_status_schema},
    'sampling_point': {'model': SamplingPoint, 'schema': sampling_point_schema},
    'material': {'model': Material, 'schema': material_schema},
    'fluid_type': {'model': FluidType, 'schema': fluid_type_schema},
    'gas_sensor': {'model': GasSensor, 'schema': gas_sensor_schema},
    'transformer': {'model': Transformer, 'schema': transformer_schema},
    'breaker': {'model': Breaker, 'schema': breaker_schema},
    'tap_changer': {'model': LoadTapChanger, 'schema': tap_changer_schema},
    'bushing': {'model': Bushing, 'schema': bushing_schema},
    'upstream': {'model': Upstream, 'schema': upstream_schema},
    'downstream': {'model': Downstream, 'schema': downstream_schema},
    'resistance': {'model': NeutralResistance, 'schema': resistance_schema},
    'air_breaker': {'model': AirCircuitBreaker, 'schema': air_breaker_schema},
    'capacitor': {'model': Capacitor, 'schema': capacitor_schema},
    'powersource': {'model': PowerSource, 'schema': powersource_schema},
    'switchgear': {'model': SwitchGear, 'schema': switchgear_schema},
    'induction_machine': {'model': InductionMachine, 'schema': induction_machine_schema},
    'synchronous_machine': {'model': SynchronousMachine, 'schema': synchronous_machine_schema},
    'rectifier': {'model': Rectifier, 'schema': rectifier_schema},
    'inductance': {'model': Inductance, 'schema': inductance_schema},
    'tank': {'model': Tank, 'schema': tank_schema},
    'switch': {'model': Switch, 'schema': switch_schema},
    'cable': {'model': Cable, 'schema': cable_schema},
    'recommendation': {'model': Recommendation, 'schema': recommendation_schema},
    'gas_level': {'model': GasLevel, 'schema': gas_level_schema},
    'interrupting_medium': {'model': InterruptingMedium, 'schema': interrupting_medium_schema},
    'breaker_mechanism': {'model': BreakerMechanism, 'schema': breaker_mechanism_schema},
    'insulation': {'model': Insulation, 'schema': insulation_schema},
    'syringe': {'model': Syringe, 'schema': syringe_schema},
    'test_reason': {'model': TestReason, 'schema': test_reason_schema},
    'test_status': {'model': TestStatus, 'schema': test_status_schema},
    'schedule': {'model': TestSchedule, 'schema': schedule_schema},
    'test_type': {'model': TestType, 'schema': test_type_schema},
    'test_type_result_table': {'model': TestTypeResultTable, 'schema': test_type_result_table_schema},
    'gasket_condition': {'model': GasketCondition, 'schema': gasket_condition_schema},
    'gas_relay': {'model': GasRelay, 'schema': gas_relay_schema},
    'fluid_level': {'model': FluidLevel, 'schema': fluid_level_schema},
    'pressure_unit': {'model': PressureUnit, 'schema': pressure_unit_schema},
    'valve_condition': {'model': ValveCondition, 'schema': valve_condition_schema},
    'pump_condition': {'model': PumpCondition, 'schema': pump_condition_schema},
    'overall_condition': {'model': OverallCondition, 'schema': overall_condition_schema},
    'paint_types': {'model': PaintTypes, 'schema': paint_types_schema},
    'tap_counter_status': {'model': TapCounterStatus, 'schema': tap_counter_status_schema},
    'tap_filter_condition': {'model': TapFilterCondition, 'schema': tap_filter_condition_schema},
    'fan_condition': {'model': FanCondition, 'schema': fan_condition_schema},
    'connection_condition': {'model': ConnectionCondition, 'schema': connection_condition_schema},
    'foundation_condition': {'model': FoundationCondition, 'schema': foundation_condition_schema},
    'heating_condition': {'model': HeatingCondition, 'schema': heating_condition_schema},
    'bushing_test': {'model': BushingTest, 'schema': bushing_test_schema},
    'winding_test': {'model': WindingTest, 'schema': winding_test_schema},
    'visual_inspection_test': {'model': VisualInspectionTest, 'schema': visual_inspection_test_schema},
    'insulation_resistance_test': {'model': InsulationResistanceTest, 'schema': insulation_resistance_test_schema},
    'polymerisation_degree_test': {'model': PolymerisationDegreeTest, 'schema': polymerisation_degree_test_schema},
    'transformer_turn_ratio_test': {'model': TransformerTurnRatioTest, 'schema': transformer_turn_ratio_test_schema},
    'winding_resistance_test': {'model': WindingResistanceTest, 'schema': winding_resistance_test_schema},
    'dissolved_gas_test': {'model': DissolvedGasTest, 'schema': dissolved_gas_test_schema},
    'water_test': {'model': WaterTest, 'schema': water_test_schema},
    'furan_test': {'model': FuranTest, 'schema': furan_test_schema},
    'inhibitor_test': {'model': InhibitorTest, 'schema': inhibitor_test_schema},
    'inhibitor_type': {'model': InhibitorType, 'schema': inhibitor_type_schema},
    'pcb_test': {'model': PCBTest, 'schema': pcb_test_schema},
    'particle_test': {'model': ParticleTest, 'schema': particle_test_schema},
    'metals_in_oil_test': {'model': MetalsInOilTest, 'schema': metals_in_oil_test_schema},
    'fluid_test': {'model': FluidTest, 'schema': fluid_test_schema},
    'norm_physic': {'model': NormPhysic, 'schema': norm_physic_schema},
    'norm_gas': {'model': NormGas, 'schema': norm_gas_schema},
    'particles': {'model': NormParticles, 'schema': particles_schema},
    'norm_isolation': {'model': NormIsolation, 'schema': norm_isolation_schema},
    'norm_furan': {'model': NormFuran, 'schema': norm_furan_schema},
    }

eq_type_dict = {1: 'air_bkr',
                2: 'bushing',
                3: 'capacitor',
                4: 'bkr',
                5: 'source',
                6: 'cable',
                # 7: 'Switchgear',
                # 8: 'Induction machine',
                9: 'synch',
                # 10: 'localization'
                11: 'tc',  # tap changer
                12: 'rect',
                # 13: 'site',
                14: 'transfo',
                15: 'tank',
                16: 'switch',
                17: 'induc',
                # 18: 'neutral resistance',
                # 19: 'gas sensor',
                }


class Tree(db.Model):
    __tablename__ = 'tree'

    id = db.Column(db.Integer(), primary_key=True, nullable=False, autoincrement=True)
    parent_id = db.Column('parent_id', db.ForeignKey("tree.id"), nullable=True)
    equipment_id = db.Column('equipment_id', db.ForeignKey(Equipment.id), nullable=False)
    equipment = db.relationship(Equipment, foreign_keys='Tree.equipment_id')
    icon = db.Column(db.String(126))
    opened = db.Column(db.Boolean)
    disabled = db.Column(db.Boolean)
    selected = db.Column(db.Boolean)
    type = db.Column(db.String(58))
    view = db.Column(db.String(126))
    status = db.Column(db.SMALLINT)

    #
    # def __repr__(self):
    #     return "{}".format(self.id)
    #
    # def serialize(self):
    #     """Return object data in easily serializeable format"""
    #     return {'id': self.id,
    #             'parent_id': self.parent_id,
    #             'icon': self.icon,
    #             'opened': self.opened,
    #             'disabled': self.disabled,
    #             'selected': self.selected,
    #             'type': self.type,
    #             'view': self.view,
    #             'status': self.status,
    #             }


class TreeTranslation(db.Model):
    __tablename__ = 'tree_translation'

    id = db.Column(db.Integer(), primary_key=True, nullable=False, autoincrement=True)
    locale = db.Column(db.String(10))
    text = db.Column(db.String(250))
    tooltip = db.Column(db.String(250))
