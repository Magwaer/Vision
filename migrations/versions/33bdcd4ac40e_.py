"""empty message

Revision ID: 33bdcd4ac40e
Revises: 131926f0bc2b
Create Date: 2016-06-07 16:40:35.558757

"""

# revision identifiers, used by Alembic.
revision = '33bdcd4ac40e'
down_revision = '131926f0bc2b'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql import table, column
from sqlalchemy import String, Integer, Boolean, Date

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    ### end Alembic commands ###

    test_type_table = table(
        'test_type',
        column('id', Integer),
        column('name', String),
    )

    op.add_column('test_type', sa.Column('group_id', Integer))
    op.add_column('test_type', sa.Column('is_group', Boolean, nullable=False, default=False))

    op.bulk_insert(
        test_type_table, [
            # Electrical group
            {'id': 1, 'name': 'Electrical', 'is_group': True},
            {'id': 2, 'name': 'Bushing Cap. and PF', 'group_id': 1},
            {'id': 3, 'name': 'Winding Cap. and PF', 'group_id': 1},
            {'id': 4, 'name': 'Winding Cap. and PF Doble', 'group_id': 1},
            {'id': 5, 'name': 'Insulation resistance', 'group_id': 1},
            {'id': 6, 'name': 'Visual inspection', 'group_id': 1},
            {'id': 7, 'name': 'Resistance; winding/contact', 'group_id': 1},
            {'id': 8, 'name': 'Degree of Polymerization (DP)', 'group_id': 1},
            {'id': 9, 'name': 'Turns ratio test (TTR)', 'group_id': 1},
            # Fluid group
            {'id': 10, 'name': 'Fluid', 'is_group': True},
            # Syringe subgroup
            {'id': 11, 'name': 'Syringe', 'is_group': True, 'group_id': 10},
            {'id': 12, 'name': 'Dissolved gas', 'group_id': 11},
            {'id': 13, 'name': 'Water - only 1 from 2 groups can be chosen', 'group_id': 11},
            {'id': 14, 'name': 'Furans - only 1 from 3 groups can be chosen', 'group_id': 11},
            {'id': 15, 'name': 'Inhibitor - only 1 from 2 groups or Antioxidant from 3 groupe can be chosen', 'group_id': 11},
            {'id': 16, 'name': 'PBC - only 1 from 3 groups can be chosen', 'group_id': 11},
            # Jar subgroup
            {'id': 17, 'name': 'Jar', 'is_group': True, 'group_id': 10},
            {'id': 18, 'name': 'Dielec.D1816(1mm)(kV)', 'group_id': 17},
            {'id': 19, 'name': 'Acidity(D974)', 'group_id': 17},
            {'id': 20, 'name': 'Density(D1298)', 'group_id': 17},
            {'id': 21, 'name': 'PCB - only 1 from 3 groups can be chosen', 'group_id': 17},
            {'id': 22, 'name': 'Inhibitor - only 1 from 2 groups or Antioxidant from 3 groupe can be chosen', 'group_id': 17},
            {'id': 23, 'name': 'Pour point', 'group_id': 17},
            {'id': 24, 'name': 'Dielec.D1816(2mm)(kV)', 'group_id': 17},
            {'id': 25, 'name': 'Color(D1500)', 'group_id': 17},
            {'id': 26, 'name': 'PF 25C(D924)', 'group_id': 17},
            {'id': 27, 'name': 'Particles', 'group_id': 17},
            {'id': 28, 'name': 'Metals in oil', 'group_id': 17},
            {'id': 29, 'name': 'Viscosity', 'group_id': 17},
            {'id': 30, 'name': 'Dielec. D877(kV)', 'group_id': 17},
            {'id': 31, 'name': 'IFT (D971)', 'group_id': 17},
            {'id': 32, 'name': 'PF 100C (D924)', 'group_id': 17},
            {'id': 33, 'name': 'Furans - only 1 from 2 groups can be chosen', 'group_id': 17},
            {'id': 34, 'name': 'Water - only 1 from 2 groups can be chosen', 'group_id': 17},
            {'id': 35, 'name': 'Corr. sulfur', 'group_id': 17},
            {'id': 36, 'name': 'Dielec. IEC-156(kV)', 'group_id': 17},
            {'id': 37, 'name': 'Visual (D1524)', 'group_id': 17},
            # 4-ml vial subgroup
            {'id': 38, 'name': '4 - ml vial', 'is_group': True, 'group_id': 10},
            {'id': 39, 'name': 'PCB - only 1 from 3 groups can be chosen', 'group_id': 38},
            {'id': 40, 'name': 'Antioxidant - only 1 from 2 groups or Antioxidant from 3 groupe can be chosen', 'group_id': 38},
        ]
    )

    test_param_table = table(
        'test_param',
        column('id', Integer),
        column('name', String),
    )
    op.bulk_insert(
        test_param_table, [

        ]
    )

    test_type_param_table = table(
        'test_type_param',
        column('id', Integer),
        column('test_type_id', Integer),
        column('test_param_id', Integer),
    )
    op.bulk_insert(
        test_type_param_table, [

        ]
    )

def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    ### end Alembic commands ###
    test_type_table = table(
        'test_type',
        column('id', Integer),
        column('name', String),
    )

    op.drop_column('test_type', 'group_id')
    op.drop_column('test_type', 'is_group')

    op.execute(sql="TRUNCATE test_type;")