"""empty message

Revision ID: 37fe3c793660
Revises: None
Create Date: 2015-12-12 10:55:35.855657

"""

# revision identifiers, used by Alembic.
revision = '37fe3c793660'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('users_roles',
    # sa.column('user_id', sa.integer(), autoincrement=false, nullable=true),
    # sa.column('role_id', sa.integer(), autoincrement=false, nullable=true),
    # sa.foreignkeyconstraint(['role_id'], [u'role.id'], name=u'users_roles_role_id_fkey'),
    # sa.foreignkeyconstraint(['user_id'], [u'users_user.id'], name=u'users_roles_user_id_fkey'),
    # sa.primarykeyconstraint()
    # )
    # op.create_table('post_translation',
    # sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('locale', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    # sa.Column('title', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    # sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['id'], [u'post.id'], name=u'post_translation_id_fkey', ondelete=u'CASCADE'),
    # sa.PrimaryKeyConstraint('id', 'locale', name=u'post_translation_pkey')
    # )
    # op.create_table('pages',
    # sa.Column('id', sa.INTEGER(), server_default="nextval('pages_id_seq'::regclass)", nullable=False),
    # sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('draft', sa.SMALLINT(), autoincrement=False, nullable=True),
    # sa.Column('slug', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name=u'pages_pkey'),
    # postgresql_ignore_search_path=False
    # )
    # op.create_table('file',
    # sa.Column('id', sa.INTEGER(), server_default="nextval('file_id_seq'::regclass)", nullable=False),
    # sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    # sa.Column('path', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name=u'file_pkey')
    # )
    # op.create_table('image',
    # sa.Column('id', sa.INTEGER(), server_default="nextval('image_id_seq'::regclass)", nullable=False),
    # sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    # sa.Column('path', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name=u'image_pkey')
    # )
    # op.create_table('pages_translation',
    # sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('locale', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    # sa.Column('title', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    # sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['id'], [u'pages.id'], name=u'pages_translation_id_fkey', ondelete=u'CASCADE'),
    # sa.PrimaryKeyConstraint('id', 'locale', name=u'pages_translation_pkey')
    # )
    # op.create_table('tag',
    # sa.Column('id', sa.INTEGER(), server_default="nextval('tag_id_seq'::regclass)", nullable=False),
    # sa.Column('text', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name=u'tag_pkey'),
    # postgresql_ignore_search_path=False
    # )
    # op.create_table('user_posts',
    # sa.Column('user_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    # sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['post_id'], [u'post.id'], name=u'user_posts_post_id_fkey', onupdate=u'CASCADE', ondelete=u'CASCADE'),
    # sa.PrimaryKeyConstraint(),
    # sa.UniqueConstraint('user_id','post_id', name='uix_2')
    # )
    # op.create_table('tree_translation',
    # sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('locale', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    # sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['id'], [u'tree.id'], name=u'tree_translation_id_fkey', ondelete=u'CASCADE'),
    # sa.PrimaryKeyConstraint('id', 'locale', name=u'tree_translation_pkey')
    # )
    # op.create_table('tree',
    # sa.Column('id', sa.INTEGER(), server_default="nextval('tree_id_seq'::regclass)", nullable=False),
    # sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('icon', sa.VARCHAR(length=126), autoincrement=False, nullable=True),
    # sa.Column('opened', sa.BOOLEAN(), autoincrement=False, nullable=True),
    # sa.Column('disabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    # sa.Column('selected', sa.BOOLEAN(), autoincrement=False, nullable=True),
    # sa.Column('type', sa.VARCHAR(length=58), autoincrement=False, nullable=True),
    # sa.Column('view', sa.VARCHAR(length=126), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['parent_id'], [u'tree.id'], name=u'tree_parent_id_fkey'),
    # sa.PrimaryKeyConstraint('id', name=u'tree_pkey')
    # )
    # op.create_table('post',
    # sa.Column('id', sa.INTEGER(), server_default="nextval('post_id_seq'::regclass)", nullable=False),
    # sa.Column('post_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('last_modified_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('draft', sa.SMALLINT(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name=u'post_pkey'),
    # postgresql_ignore_search_path=False
    # )
    # op.create_table('tag_posts',
    # sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.ForeignKeyConstraint(['post_id'], [u'post.id'], name=u'tag_posts_post_id_fkey', onupdate=u'CASCADE', ondelete=u'CASCADE'),
    # sa.ForeignKeyConstraint(['tag_id'], [u'tag.id'], name=u'tag_posts_tag_id_fkey', onupdate=u'CASCADE', ondelete=u'CASCADE'),
    # sa.PrimaryKeyConstraint(),
    # sa.UniqueConstraint('tag_id','post_id', name='uix_1')
    # )
    # op.create_table('role',
    # sa.Column('id', sa.INTEGER(), server_default="nextval('role_id_seq'::regclass)", nullable=False),
    # sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    # sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name=u'role_pkey'),
    # sa.UniqueConstraint('name', name='role_name_key')
    # )
    # op.create_table('users_user',
    # sa.Column('id', sa.INTEGER(), server_default="nextval('users_user_id_seq'::regclass)", nullable=False),
    # sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    # sa.Column('alias', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    # sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    # sa.Column('password', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    # sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=True),
    # sa.Column('address', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('mobile', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    # sa.Column('website', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('country', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('photo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    # sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    # sa.Column('confirmed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    # sa.Column('confirmed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name=u'users_user_pkey'),
    # sa.UniqueConstraint('alias', name='users_user_alias_key'),
    # sa.UniqueConstraint('email', name='users_user_email_key')
    # )
    ### end Alembic commands ###
    pass


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('users_user')
    # op.drop_table('role')
    # op.drop_table('tag_posts')
    # op.drop_table('post')
    # op.drop_table('tree')
    # op.drop_table('tree_translation')
    # op.drop_table('user_posts')
    # op.drop_table('tag')
    # op.drop_table('pages_translation')
    # op.drop_table('image')
    # op.drop_table('file')
    # op.drop_table('pages')
    # op.drop_table('post_translation')
    # op.drop_table('users_roles')
    pass
    ### end Alembic commands ###
